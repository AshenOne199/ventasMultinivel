/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 16.1 		*/
/*  Created On : 24-mar.-2023 12:46:40 a. m. 				*/
/*  DBMS       : Oracle 						*/
/* ---------------------------------------------------- */

/* Drop Triggers, Sequences for Autonumber Columns */

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_CATEGORIA_K_IDCATEGORIA'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER TRG_CATEGORIA_K_IDCATEGORIA'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_CATEGORIA_K_IDCATEGORIA'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_CATEGORIA_K_IDCATEGORIA'; 
END IF; 
END;
/


DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_ORDEN_K_IDORDEN'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER TRG_ORDEN_K_IDORDEN'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_PAIS_K_IDPAIS'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER TRG_PAIS_K_IDPAIS'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_PAIS_K_IDPAIS'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PAIS_K_IDPAIS'; 
END IF; 
END;
/


DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_PRODUCTO_K_IDPRODUCTO'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER TRG_PRODUCTO_K_IDPRODUCTO'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_PRODUCTO_K_IDPRODUCTO'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PRODUCTO_K_IDPRODUCTO'; 
END IF; 
END;
/


DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_REGION_K_IDREGION'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER TRG_REGION_K_IDREGION'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_REGION_K_IDREGION'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_REGION_K_IDREGION'; 
END IF; 
END;
/


/* Drop Tables */

begin
	EXECUTE IMMEDIATE 'DROP TABLE   CATEGORIA CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   CLIENTE CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   INVENTARIO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   ORDEN CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   PAIS CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   PERIODO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   PRODUCTO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   REGION CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   REPRESENTANTE_VENTAS CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

/* Create Tables */

CREATE TABLE  CATEGORIA
(
	K_IDCATEGORIA NUMBER(5) NOT NULL,	-- Atributo por el cual se identifica cada diferente categoria agregada
	K_IDSUBCATEGORIA NUMBER(5) NULL,	-- Id de la subcategoria
	N_NOMBRE VARCHAR(100) NOT NULL	-- Nombre por el cual está asociada a una categoria en el registro de cada categoria nueva.
)
;

CREATE TABLE  CLIENTE
(
	K_TIPO_ID VARCHAR(5) NOT NULL,	-- Tipo de identificación del cliente.
	K_NUMERO_ID NUMBER(15) NOT NULL,	-- Número de identificación del cliente.
	K_TIPO_ID_REP VARCHAR(3) NOT NULL,	-- Tipo de Id del representante actual
	K_ID_NUMERO_REP NUMBER(15) NOT NULL,	-- Numero de Id del representante actual
	I_TIPO_ID_REP VARCHAR(3) NOT NULL,	-- Tipo Id representante que lo inscribio/capto
	Q_NUMERO_ID_REP NUMBER(15) NOT NULL,	-- Numero Id representante que lo inscribio/capto
	N_NOMBRECOMPLETO VARCHAR(200) NOT NULL,	-- Corresponde al nombre completo que posee la persona o usuario.
	N_APELLIDOCOMPLETO VARCHAR(200) NOT NULL,	-- Corresponde al apellido completo que posee la persona o usuario. 
	F_FECHACREACION DATE NOT NULL,	-- Fecha creación de cuenta 
	O_EMAIL VARCHAR(150) NOT NULL,	-- Corresponde a el correo con el cual el usuario se registra. 
	Q_TELEFONO NUMBER(15) NOT NULL,	-- Atributo relacionado al contacto telefónico del cliente 
	N_CIUDAD VARCHAR(150) NOT NULL,	-- Ciudad de residencia del cliente 
	I_GENERO VARCHAR(3) NOT NULL,	-- Atributo personal del cliente 
	O_PASSWORD VARCHAR(100) NOT NULL,	-- Atributo para control de acceso 
	F_NACIMIENTO DATE NOT NULL,	-- Atributo personal relacionado a la fecha de nacimiento del cliente 
	O_DIRECCION VARCHAR(200) NOT NULL,	-- Atributo relacionado a la ubicación del cliente 
	N_USERNAME VARCHAR(100) NOT NULL
)
;

CREATE TABLE  INVENTARIO
(
	K_IDPRODUCTO NUMBER(5) NOT NULL,	-- Identificador del producto.
	K_IDREGION NUMBER(5) NOT NULL,	-- Código auto incrementable que representa la primari de la región registrada
	Q_STOCK NUMBER(5) NOT NULL,
	V_PRECIOPRODUCTO NUMBER(10,2) NOT NULL	-- Valor establecido para un producto según en el inventario que se encuentre registrado.
)
;

CREATE TABLE  ORDEN
(
	K_IDORDEN NUMBER(10) NOT NULL,	-- Atributo que identifica el numero de orden entre todos los registros de Orden.
	K_IDPRODUCTO NUMBER(5) NOT NULL,	-- Id producto de la llave foranea
	K_IDREGION NUMBER(5) NOT NULL,	-- Id region de la llave foranea
	K_IDPERIODO VARCHAR(50) NOT NULL,
	F_FECHAREGISTRO DATE NULL,	-- Atributo de fecha que asocia la fecha de expedición de la orden.
	I_ESTADO VARCHAR(100) NOT NULL,	-- Atributo que proporciona el estado actual de la orden expedida por un cliente o un representante de ventas.
	K_TIPO_ID VARCHAR(5) NOT NULL,
	K_NUMERO_ID NUMBER(15) NOT NULL,
	K_TIPO_ID_CALIF VARCHAR(5) NULL,
	K_NUMERO_ID_CALIF NUMBER(15) NULL,
	Q_CALIFICACION NUMBER(1) NULL,
	Q_CANTIDAD NUMBER(3) NOT NULL,
	I_TIPO_ID_REP VARCHAR(3) NULL,
	Q_NUMERO_ID_REP NUMBER(15) NULL
)
;

CREATE TABLE  PAIS
(
	K_IDPAIS NUMBER(5) NOT NULL,	-- Atributo por el cual se identifica el pais unico.
	N_NOMBRE VARCHAR(100) NOT NULL	-- Atributo del nombre de cada país.
)
;

CREATE TABLE  PERIODO
(
	K_IDPERIODO VARCHAR(50) NOT NULL,	-- Atributo que identifica el periodo registrado en la tabla Periodo.
	F_FECHAINICIO DATE NOT NULL,	-- Atributo que contiene el inicio de un Periodo en el sistema.
	F_FECHAFIN DATE NOT NULL	-- Atributo que contiene el fin de un Periodo en el Sistema
)
;

CREATE TABLE  PRODUCTO
(
	K_IDPRODUCTO NUMBER(5) NOT NULL,	-- Identificador del producto.
	K_IDCATEGORIA NUMBER(5) NOT NULL,	-- Valor que representa la identificación  a la categoria que pertenece el producto
	N_NOMBRE VARCHAR(100) NOT NULL,	-- Nombre especifico del producto
	N_URLIMAGEN VARCHAR(200) NOT NULL	-- Dirrección URL donde se almacena la imagen del producto
)
;

CREATE TABLE  REGION
(
	K_IDREGION NUMBER(5) NOT NULL,	-- Código auto incrementable que representa la primari de la región registrada
	K_IDPAIS NUMBER(5) NOT NULL,	-- Pais al que pertenece la region
	N_NOMBRE VARCHAR(50) NOT NULL	-- Atributo asociado al nombre perteneciente a una región registrada
)
;

CREATE TABLE  REPRESENTANTE_VENTAS
(
	K_TIPO_ID VARCHAR(3) NOT NULL,	-- Tipo de identificación del representante de ventas. 
	K_NUMERO_ID NUMBER(15) NOT NULL,	-- Número de identificación del representante de ventas. 
	K_TIPO_ID_JEFE VARCHAR(3) NULL,	-- Tipo Id representante jefe
	K_NUMERO_ID_JEFE NUMBER(15) NULL,	-- Numero Id representante jefe
	N_NOMBRECOMPLETO VARCHAR(200) NOT NULL,	-- Corresponde al nombre completo que posee la persona o usuario. 
	I_TIPO_ID_REP VARCHAR(3) NULL,
	Q_NUMERO_ID_REP NUMBER(15) NULL,	-- Numero de Id de RV que lo inscribio por primera vez
	N_APELLIDOCOMPLETO VARCHAR(200) NOT NULL,	-- Corresponde al apellido completo que posee la persona o usuario. 
	F_FECHACREACION DATE NOT NULL,	-- Fecha creación de cuenta 
	O_EMAIL VARCHAR(150) NOT NULL,	-- Corresponde a el correo con el cual el usuario se registra. 
	Q_TELEFONO NUMBER(15) NOT NULL,	-- Atributo relacionado al contacto telefónico del representante de ventas 
	N_REGION VARCHAR(100) NOT NULL,	-- Región de operabilidad del representante de ventas 
	I_GENERO VARCHAR(3) NOT NULL,	-- Atributo personal del representante de ventas 
	O_PASSWORD VARCHAR(200) NOT NULL,	-- Atributo para control de acceso 
	F_NACIMIENTO DATE NOT NULL,	-- Atributo personal relacionado a la fecha de nacimiento del representante de ventas 
	O_DIRECCION VARCHAR(150) NOT NULL,	-- Atributo relacionado a la ubicación del representante de ventas 
	I_TIPO VARCHAR(10) NOT NULL,	-- Tipo de cargo del representante de ventas 
	F_FECHACONTRATO DATE NOT NULL,	-- Atributo relacionado a la fecha de vinculación del representante de ventas 
	N_USERNAME VARCHAR(100) NOT NULL,
	I_ESTADO VARCHAR(50) NOT NULL
)
;
/* Create Comments, Sequences and Triggers for Autonumber Columns */

COMMENT ON TABLE  CATEGORIA IS 'Esta tabla almacenará las categorias y subcategorias de cada producto.'
;


COMMENT ON COLUMN  CATEGORIA.K_IDCATEGORIA IS 'Atributo por el cual se identifica cada diferente categoria agregada';

COMMENT ON COLUMN  CATEGORIA.K_IDSUBCATEGORIA IS 'Id de la subcategoria';

COMMENT ON COLUMN  CATEGORIA.N_NOMBRE IS 'Nombre por el cual está asociada a una categoria en el registro de cada categoria nueva.';

CREATE SEQUENCE SEQ_CATEGORIA_K_IDCATEGORIA 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER TRG_CATEGORIA_K_IDCATEGORIA 
	BEFORE INSERT 
	ON CATEGORIA 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_CATEGORIA_K_IDCATEGORIA.NEXTVAL 
		INTO :NEW.K_IDCATEGORIA 
		FROM DUAL; 
	END;

/


COMMENT ON TABLE  CLIENTE IS 'Almacena la información de cada cliente que interactúa con la aplicación.'
;


COMMENT ON COLUMN  CLIENTE.K_TIPO_ID IS 'Tipo de identificación del cliente.';

COMMENT ON COLUMN  CLIENTE.K_NUMERO_ID IS 'Número de identificación del cliente.';

COMMENT ON COLUMN  CLIENTE.K_TIPO_ID_REP IS 'Tipo de Id del representante actual';

COMMENT ON COLUMN  CLIENTE.K_ID_NUMERO_REP IS 'Numero de Id del representante actual';

COMMENT ON COLUMN  CLIENTE.I_TIPO_ID_REP IS 'Tipo Id representante que lo inscribio/capto';

COMMENT ON COLUMN  CLIENTE.Q_NUMERO_ID_REP IS 'Numero Id representante que lo inscribio/capto';

COMMENT ON COLUMN  CLIENTE.N_NOMBRECOMPLETO IS 'Corresponde al nombre completo que posee la persona o usuario.';

COMMENT ON COLUMN  CLIENTE.N_APELLIDOCOMPLETO IS 'Corresponde al apellido completo que posee la persona o usuario. ';

COMMENT ON COLUMN  CLIENTE.F_FECHACREACION IS 'Fecha creación de cuenta ';

COMMENT ON COLUMN  CLIENTE.O_EMAIL IS 'Corresponde a el correo con el cual el usuario se registra. ';

COMMENT ON COLUMN  CLIENTE.Q_TELEFONO IS 'Atributo relacionado al contacto telefónico del cliente ';

COMMENT ON COLUMN  CLIENTE.N_CIUDAD IS 'Ciudad de residencia del cliente ';

COMMENT ON COLUMN  CLIENTE.I_GENERO IS 'Atributo personal del cliente ';

COMMENT ON COLUMN  CLIENTE.O_PASSWORD IS 'Atributo para control de acceso ';

COMMENT ON COLUMN  CLIENTE.F_NACIMIENTO IS 'Atributo personal relacionado a la fecha de nacimiento del cliente ';

COMMENT ON COLUMN  CLIENTE.O_DIRECCION IS 'Atributo relacionado a la ubicación del cliente ';

COMMENT ON TABLE  INVENTARIO IS 'Tabla de rompimiento generada por la relación entre Region y Producto, donde contendrá el almacenamiento especifico de productos por regiones.'
;


COMMENT ON COLUMN  INVENTARIO.K_IDPRODUCTO IS 'Identificador del producto.';

COMMENT ON COLUMN  INVENTARIO.K_IDREGION IS 'Código auto incrementable que representa la primari de la región registrada';

COMMENT ON COLUMN  INVENTARIO.V_PRECIOPRODUCTO IS 'Valor establecido para un producto según en el inventario que se encuentre registrado.';

COMMENT ON TABLE  ORDEN IS 'Tabla por la cual se articula y guardan los registros de todas las ordenes solicitadas por los clientes o sus representantes de ventas.'
;


COMMENT ON COLUMN  ORDEN.K_IDORDEN IS 'Atributo que identifica el numero de orden entre todos los registros de Orden.';

COMMENT ON COLUMN  ORDEN.K_IDPRODUCTO IS 'Id producto de la llave foranea';

COMMENT ON COLUMN  ORDEN.K_IDREGION IS 'Id region de la llave foranea';

COMMENT ON COLUMN  ORDEN.F_FECHAREGISTRO IS 'Atributo de fecha que asocia la fecha de expedición de la orden.';

COMMENT ON COLUMN  ORDEN.I_ESTADO IS 'Atributo que proporciona el estado actual de la orden expedida por un cliente o un representante de ventas.';



COMMENT ON TABLE  PAIS IS 'Tabla por la cual se guardan los registros donde opera el Sistema'
;


COMMENT ON COLUMN  PAIS.K_IDPAIS IS 'Atributo por el cual se identifica el pais unico.';

COMMENT ON COLUMN  PAIS.N_NOMBRE IS 'Atributo del nombre de cada país.';

CREATE SEQUENCE SEQ_PAIS_K_IDPAIS 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER TRG_PAIS_K_IDPAIS 
	BEFORE INSERT 
	ON PAIS 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_PAIS_K_IDPAIS.NEXTVAL 
		INTO :NEW.K_IDPAIS 
		FROM DUAL; 
	END;

/


COMMENT ON TABLE  PERIODO IS 'Tabla que contiene registrado los periodos establecidos por el sistema de ventas para el cumplimiento de las metas de la piramide.'
;


COMMENT ON COLUMN  PERIODO.K_IDPERIODO IS 'Atributo que identifica el periodo registrado en la tabla Periodo.';

COMMENT ON COLUMN  PERIODO.F_FECHAINICIO IS 'Atributo que contiene el inicio de un Periodo en el sistema.';

COMMENT ON COLUMN  PERIODO.F_FECHAFIN IS 'Atributo que contiene el fin de un Periodo en el Sistema';

COMMENT ON TABLE  PRODUCTO IS 'Esta tabla consta de todos los productos posibles en el sistema de ventas multinivel'
;


COMMENT ON COLUMN  PRODUCTO.K_IDPRODUCTO IS 'Identificador del producto.';

COMMENT ON COLUMN  PRODUCTO.K_IDCATEGORIA IS 'Valor que representa la identificación  a la categoria que pertenece el producto';

COMMENT ON COLUMN  PRODUCTO.N_NOMBRE IS 'Nombre especifico del producto';

COMMENT ON COLUMN  PRODUCTO.N_URLIMAGEN IS 'Dirrección URL donde se almacena la imagen del producto';

CREATE SEQUENCE SEQ_PRODUCTO_K_IDPRODUCTO 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER TRG_PRODUCTO_K_IDPRODUCTO 
	BEFORE INSERT 
	ON PRODUCTO 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_PRODUCTO_K_IDPRODUCTO.NEXTVAL 
		INTO :NEW.K_IDPRODUCTO 
		FROM DUAL; 
	END;

/


COMMENT ON TABLE  REGION IS 'Tabla por la cual se contienen todos los registro donde está operando el sistema de ventas NatAmE'
;


COMMENT ON COLUMN  REGION.K_IDREGION IS 'Código auto incrementable que representa la primari de la región registrada';

COMMENT ON COLUMN  REGION.K_IDPAIS IS 'Pais al que pertenece la region';

COMMENT ON COLUMN  REGION.N_NOMBRE IS 'Atributo asociado al nombre perteneciente a una región registrada';

CREATE SEQUENCE SEQ_REGION_K_IDREGION 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER TRG_REGION_K_IDREGION 
	BEFORE INSERT 
	ON REGION 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_REGION_K_IDREGION.NEXTVAL 
		INTO :NEW.K_IDREGION 
		FROM DUAL; 
	END;

/


COMMENT ON TABLE  REPRESENTANTE_VENTAS IS 'Almacena la información de cada representante de ventas que interactúa con la aplicación.'
;


COMMENT ON COLUMN  REPRESENTANTE_VENTAS.K_TIPO_ID IS 'Tipo de identificación del representante de ventas. ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.K_NUMERO_ID IS 'Número de identificación del representante de ventas. ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.K_TIPO_ID_JEFE IS 'Tipo Id representante jefe';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.K_NUMERO_ID_JEFE IS 'Numero Id representante jefe';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.N_NOMBRECOMPLETO IS 'Corresponde al nombre completo que posee la persona o usuario. ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.Q_NUMERO_ID_REP IS 'Numero de Id de RV que lo inscribio por primera vez';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.N_APELLIDOCOMPLETO IS 'Corresponde al apellido completo que posee la persona o usuario. ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.F_FECHACREACION IS 'Fecha creación de cuenta ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.O_EMAIL IS 'Corresponde a el correo con el cual el usuario se registra. ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.Q_TELEFONO IS 'Atributo relacionado al contacto telefónico del representante de ventas ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.N_REGION IS 'Región de operabilidad del representante de ventas ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.I_GENERO IS 'Atributo personal del representante de ventas ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.O_PASSWORD IS 'Atributo para control de acceso ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.F_NACIMIENTO IS 'Atributo personal relacionado a la fecha de nacimiento del representante de ventas ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.O_DIRECCION IS 'Atributo relacionado a la ubicación del representante de ventas ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.I_TIPO IS 'Tipo de cargo del representante de ventas ';

COMMENT ON COLUMN  REPRESENTANTE_VENTAS.F_FECHACONTRATO IS 'Atributo relacionado a la fecha de vinculación del representante de ventas ';

/* Create Primary Keys, Indexes, Uniques, Checks, Triggers */

ALTER TABLE  CATEGORIA 
 ADD CONSTRAINT PK_Categoria
	PRIMARY KEY (K_IDCATEGORIA) 
 USING INDEX
;

CREATE INDEX IXFK_CATEGORIA_CATEGORIA   
 ON  CATEGORIA (K_IDSUBCATEGORIA) 
;

ALTER TABLE  CLIENTE 
 ADD CONSTRAINT PK_CLIENTE
	PRIMARY KEY (K_TIPO_ID,K_NUMERO_ID) 
 USING INDEX
;

ALTER TABLE  CLIENTE 
 ADD CONSTRAINT CK_K_TIPO_ID CHECK (K_TIPO_ID IN ('CC', 'CE', 'NIT', 'PP'))
;

ALTER TABLE  CLIENTE 
 ADD CONSTRAINT CK_K_TIPO_ID_REP CHECK (K_TIPO_ID_REP IN ('CC', 'CE', 'NIT', 'PP'))
;

CREATE INDEX IXFK_CLIENTE_REPRESENTANT01   
 ON  CLIENTE (K_TIPO_ID_REP,K_ID_NUMERO_REP) 
;

ALTER TABLE  INVENTARIO 
 ADD CONSTRAINT PK_INVENTARIO
	PRIMARY KEY (K_IDPRODUCTO,K_IDREGION) 
 USING INDEX
;

CREATE INDEX IXFK_INVENTARIO_PRODUCTO   
 ON  INVENTARIO (K_IDPRODUCTO) 
;

CREATE INDEX IXFK_INVENTARIO_REGION   
 ON  INVENTARIO (K_IDREGION) 
;

ALTER TABLE  ORDEN 
 ADD CONSTRAINT PK_ORDEN
	PRIMARY KEY (K_IDORDEN,K_IDPRODUCTO,K_IDREGION,K_TIPO_ID,K_NUMERO_ID) 
 USING INDEX
;

ALTER TABLE  ORDEN 
 ADD CONSTRAINT CK_I_ESTADO CHECK (I_ESTADO = 'EN PROCESO' OR I_ESTADO = 'COMPLETADO' OR I_ESTADO = 'CANCELADO')
;

ALTER TABLE  ORDEN 
 ADD CONSTRAINT CK_Q_CALIFICACION CHECK (q_calificacion BETWEEN 1 AND 5)
;

CREATE INDEX IXFK_ORDEN_CLIENTE   
 ON  ORDEN (K_TIPO_ID,K_NUMERO_ID) 
;

CREATE INDEX IXFK_ORDEN_CLIENTE02   
 ON  ORDEN (K_TIPO_ID_CALIF,K_NUMERO_ID_CALIF) 
;

CREATE INDEX IXFK_ORDEN_INVENTARIO   
 ON  ORDEN (K_IDPRODUCTO,K_IDREGION) 
;

CREATE INDEX IXFK_ORDEN_PERIODO   
 ON  ORDEN (K_IDPERIODO) 
;

CREATE OR REPLACE TRIGGER actualizar_cantidad_producto
AFTER INSERT OR UPDATE OF I_ESTADO ON ORDEN
FOR EACH ROW
BEGIN
    UPDATE INVENTARIO I
    SET I.Q_STOCK = I.Q_STOCK - :NEW.Q_CANTIDAD
    WHERE (I.K_IDPRODUCTO = :NEW.K_IDPRODUCTO AND I.K_IDREGION = :NEW.K_IDREGION) 
        AND EXISTS (
            SELECT 1 
            FROM CLIENTE C 
            WHERE C.K_TIPO_ID = :NEW.K_TIPO_ID AND C.K_NUMERO_ID = :NEW.K_NUMERO_ID
        )
        AND :NEW.I_ESTADO = 'COMPLETADO';

END;
/

CREATE OR REPLACE TRIGGER actualizar_vendedor_orden
BEFORE INSERT OR UPDATE OF I_ESTADO ON ORDEN
FOR EACH ROW
BEGIN

    IF :NEW.I_ESTADO = 'COMPLETADO' THEN
        SELECT C.I_TIPO_ID_REP INTO :NEW.I_TIPO_ID_REP FROM CLIENTE C WHERE C.K_TIPO_ID = :NEW.K_TIPO_ID AND C.K_NUMERO_ID = :NEW.K_NUMERO_ID;
        SELECT C.Q_NUMERO_ID_REP INTO :NEW.Q_NUMERO_ID_REP FROM CLIENTE C WHERE C.K_TIPO_ID = :NEW.K_TIPO_ID AND C.K_NUMERO_ID = :NEW.K_NUMERO_ID;
    END IF;

END;
/

ALTER TABLE  PAIS 
 ADD CONSTRAINT PK_PAIS
	PRIMARY KEY (K_IDPAIS) 
 USING INDEX
;

ALTER TABLE  PERIODO 
 ADD CONSTRAINT PK_Table1
	PRIMARY KEY (K_IDPERIODO) 
 USING INDEX
;

ALTER TABLE  PRODUCTO 
 ADD CONSTRAINT PK_Producto
	PRIMARY KEY (K_IDPRODUCTO) 
 USING INDEX
;

CREATE INDEX IXFK_PRODUCTO_CATEGORIA   
 ON  PRODUCTO (K_IDCATEGORIA) 
;

ALTER TABLE  REGION 
 ADD CONSTRAINT PK_REGION
	PRIMARY KEY (K_IDREGION) 
 USING INDEX
;

CREATE INDEX IXFK_REGION_PAIS   
 ON  REGION (K_IDPAIS) 
;

ALTER TABLE  REPRESENTANTE_VENTAS 
 ADD CONSTRAINT PK_REPRESENTANTE_V_01
	PRIMARY KEY (K_TIPO_ID,K_NUMERO_ID) 
 USING INDEX
;

ALTER TABLE  REPRESENTANTE_VENTAS 
 ADD CONSTRAINT CK_K_TIPO_ID_RV CHECK (K_TIPO_ID IN ('CC', 'CE', 'NIT', 'PP'))
;

ALTER TABLE  REPRESENTANTE_VENTAS 
 ADD CONSTRAINT CK_K_TIPO_ID_JEFE CHECK (K_TIPO_ID_JEFE IN ('CC', 'CE', 'NIT', 'PP'))
;


CREATE INDEX IXFK_REPRESENTANT_REPRESE01   
 ON  REPRESENTANTE_VENTAS (K_TIPO_ID_JEFE,K_NUMERO_ID_JEFE) 
;

/* Create Foreign Key Constraints */

ALTER TABLE  CLIENTE 
 ADD CONSTRAINT FK_CLIENTE_REPRESENTANTE_VE_01
	FOREIGN KEY (K_TIPO_ID_REP,K_ID_NUMERO_REP) REFERENCES  REPRESENTANTE_VENTAS (K_TIPO_ID,K_NUMERO_ID)
;

ALTER TABLE  INVENTARIO 
 ADD CONSTRAINT FK_INVENTARIO_PRODUCTO
	FOREIGN KEY (K_IDPRODUCTO) REFERENCES  PRODUCTO (K_IDPRODUCTO)
;

ALTER TABLE  INVENTARIO 
 ADD CONSTRAINT FK_INVENTARIO_REGION
	FOREIGN KEY (K_IDREGION) REFERENCES  REGION (K_IDREGION)
;

ALTER TABLE  ORDEN 
 ADD CONSTRAINT FK_ORDEN_CLIENTE
	FOREIGN KEY (K_TIPO_ID,K_NUMERO_ID) REFERENCES  CLIENTE (K_TIPO_ID,K_NUMERO_ID)
;

ALTER TABLE  ORDEN 
 ADD CONSTRAINT FK_ORDEN_CLIENTE02
	FOREIGN KEY (K_TIPO_ID_CALIF,K_NUMERO_ID_CALIF) REFERENCES  CLIENTE (K_TIPO_ID,K_NUMERO_ID)
;

ALTER TABLE  ORDEN 
 ADD CONSTRAINT FK_ORDEN_INVENTARIO
	FOREIGN KEY (K_IDPRODUCTO,K_IDREGION) REFERENCES  INVENTARIO (K_IDPRODUCTO,K_IDREGION)
;

ALTER TABLE  ORDEN 
 ADD CONSTRAINT FK_ORDEN_PERIODO
	FOREIGN KEY (K_IDPERIODO) REFERENCES  PERIODO (K_IDPERIODO)
;

ALTER TABLE  PRODUCTO 
 ADD CONSTRAINT FK_PRODUCTO_CATEGORIA
	FOREIGN KEY (K_IDCATEGORIA) REFERENCES  CATEGORIA (K_IDCATEGORIA)
;

ALTER TABLE  REGION 
 ADD CONSTRAINT FK_REGION_PAIS
	FOREIGN KEY (K_IDPAIS) REFERENCES  PAIS (K_IDPAIS)
;
